// *** DO NOT EDIT. GENERATED BY PRISMIX. ***
datasource db {
	provider = "postgresql"
	url = env("DATABASE_URL")
}
generator client {
	provider = "prisma-client-js"
	previewFeatures = ["fullTextSearch"]
}
model Brand {
	id Int @id @default(autoincrement())
	name String 
}
model Car {
	id Int @id @default(autoincrement())
	carModelId Int 
	carMileage Float 
	dayRentalPrice Float 
	fuelConsumption Int 
	carModel CarModel @relation(name: "CarToCarModel", fields: [carModelId], references: [id])
	startrentalDate DateTime? 
	overRentalDate DateTime? 
	carStatus CARSTATUS 
	rental Rental[] @relation(name: "CarToRental")
}
model CarModel {
	id Int @id @default(autoincrement())
	car Car[] @relation(name: "CarToCarModel")
	barndId Int 
	count Int 
	model String 
	priceCategory PRICECATEGORY 
	barnd Barnd @relation(name: "BarndToCarModel", fields: [barndId], references: [id])
}
model Barnd {
	id Int @id
	carModel CarModel[] @relation(name: "BarndToCarModel")
}
model Rental {
	id Int @id @default(autoincrement())
	employeeId Int 
	carId Int 
	userId Int 
	createdAt DateTime @default(now())
	updatedAt DateTime? @updatedAt
	status RENTALSTATUS 
	employee Employee @relation(name: "EmployeeToRental", fields: [employeeId], references: [id])
	car Car @relation(name: "CarToRental", fields: [carId], references: [id])
	user User @relation(name: "RentalToUser", fields: [userId], references: [id])
}
model Employee {
	id Int @id
	rental Rental[] @relation(name: "EmployeeToRental")
}
model User {
	id Int @id @default(autoincrement())
	rental Rental[] @relation(name: "RentalToUser")
	email String? @unique
	password String? 
	zipCode String? 
	phoneNumber String? 
	address String? 
	hash String? 
	birthDate DateTime? 
	createdAt DateTime? @default(now())
	userLogins UserLogin[] @relation(name: "UserToUserLogin")
	roles String? @default("user")
}
model UserLogin {
	id Int @id @default(autoincrement())
	userId Int 
	user User @relation(name: "UserToUserLogin", fields: [userId], references: [id])
	expires DateTime 
	roles String 
	createdAt DateTime @default(now())
}
enum CARSTATUS {
	REPAIRING
	AVAILABLE
}
enum PRICECATEGORY {
	BASIC
	STANDARD
	MEDIUM
	PREMIUM
}
enum RENTALSTATUS {
	LASTS
	CANCELLED
	COMPLETED
}