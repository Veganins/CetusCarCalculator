generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Car {
  id              Int        @id @default(autoincrement())
  carMileage      Float
  dayRentalPrice  Float
  fuelConsumption Int
  startrentalDate DateTime?
  overRentalDate  DateTime?
  carStatus       CARSTATUS
  carModel        CarModel[] @relation("CarToCarModel")
  rental          Rental[]   @relation("CarToRental")
}

model CarModel {
  id            Int           @id @default(autoincrement())
  model         String
  priceCategory PRICECATEGORY
  barnd         String
  carModelId    Int
  car           Car           @relation("CarToCarModel", fields: [carModelId], references: [id])
}

model Rental {
  id         Int          @id @default(autoincrement())
  employeeId Int
  carId      Int
  userId     Int
  createdAt  DateTime     @default(now())
  updatedAt  DateTime?    @updatedAt
  status     RENTALSTATUS
  car        Car          @relation("CarToRental", fields: [carId], references: [id])
  employee   Employee     @relation("EmployeeToRental", fields: [employeeId], references: [id])
  user       User         @relation("RentalToUser", fields: [userId], references: [id])
}

model Employee {
  id     Int      @id
  rental Rental[] @relation("EmployeeToRental")
}

model User {
  id                           Int         @id @default(autoincrement())
  email                        String      @unique
  password                     String
  phoneNumber                  String?
  address                      String?
  birthDate                    DateTime?
  expirationDateDrivingLicense DateTime?
  createdAt                    DateTime?   @default(now())
  roles                        ROLE
  rental                       Rental[]    @relation("RentalToUser")
  userLogins                   UserLogin[] @relation("UserToUserLogin")

  @@map("users")
}

model UserLogin {
  id           Int      @id @default(autoincrement())
  userId       Int
  expires      DateTime
  roles        String
  refreshToken String   @unique
  createdAt    DateTime @default(now())
  users        User     @relation("UserToUserLogin", fields: [userId], references: [id])
}

enum CARSTATUS {
  REPAIRING
  AVAILABLE
}

enum PRICECATEGORY {
  BASIC
  STANDARD
  MEDIUM
  PREMIUM
}

enum RENTALSTATUS {
  LASTS
  CANCELLED
  COMPLETED
}

enum ROLE {
  USER
  GLOBAL_ADMIN
}
